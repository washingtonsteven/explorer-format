{"mappings":"AAoHC,MACA,MAAMA,EAjHgB,MAEtB,MAAMC,EAAoBC,SAASC,cAAc,gBAEjD,IAAKF,EACJ,MAAM,IAAIG,MAAM,gCAGjB,MAAMC,EAAOJ,EAAkBK,aAAa,QACtCC,EAAON,EAAkBK,aAAa,QACtCE,EAAYP,EAAkBK,aAAa,aAEjD,IAAKD,EACJ,MAAM,IAAID,MAAM,4BAGjB,IAAKG,EACJ,MAAM,IAAIH,MAAM,6BAGjB,IAAKI,EACJ,MAAM,IAAIJ,MAAM,2BAGjB,MAAMK,EAASR,EAAkBK,aAAa,UACxCI,EAAgBT,EAAkBK,aAAa,kBAC/CK,EAAOV,EAAkBK,aAAa,QACtCM,EAAUX,EAAkBK,aAAa,WACzCO,EAAiBZ,EAAkBK,aAAa,mBAGhDQ,EAAsB,GACtBC,EAAeb,SAASc,iBAAiB,kBA4C/C,OA1CAC,MAAMC,KAAKH,GAAcI,SAASC,IACjC,MAAMC,EAAMD,EAAKd,aAAa,OACxBD,EAAOe,EAAKd,aAAa,QAE/B,IAAKe,EACJ,MAAM,IAAIjB,MAAM,oBAAoBC,wBAErC,IAAKA,EACJ,MAAM,IAAID,MAAM,sBAAsBiB,wBAGvC,MAAMC,EAAUF,EAAKd,aAAa,QAC5BiB,EAAcH,EAAKd,aAAa,QAChCkB,EAAUJ,EAAKd,aAAa,QAC5BmB,EAAUL,EAAKM,UAEfC,EAAOL,GAASM,MAAM,KACtBC,EAAW,CAAEC,EAAG,EAAGC,EAAG,GAC5B,GAAIR,EAAa,CAChB,MAAMS,EAAiBT,EACrBK,MAAM,KACNK,KAAKC,GAAMC,WAAWD,KACxBL,EAASC,EAAIE,EAAe,GAC5BH,EAASE,EAAIC,EAAe,E,CAE7B,MAAMI,EAAO,CAAEC,MAAO,IAAKC,OAAQ,KACnC,GAAId,EAAS,CACZ,MAAMe,EAAOf,EAAQI,MAAM,KAAKK,KAAKC,GAAMC,WAAWD,KACtDE,EAAKC,MAAQE,EAAK,GAClBH,EAAKE,OAASC,EAAK,E,CAGpBzB,EAAS0B,KAAK,C,IACbnB,E,KACAhB,E,KACAsB,E,SACAE,E,KACAO,E,QACAX,GACC,IAGI,C,KACNpB,E,KACAE,E,OACAE,E,cACAC,E,UACAF,E,KACAG,E,QACAC,E,eACAC,E,SACAC,EACA2B,kBAAmBjC,EACnB,EA0BiBkC,GACZC,EAAiBzC,SAASC,cAAc,aAC9C,IAAKwC,EACJ,MAAM,IAAIvC,MAAM,sCAGjB,MAAMwC,EAAmBD,EAAexC,cACvC,yBAED,IAAKyC,EACJ,MAAM,IAAIxC,MAAM,yCAxBK,EAACiB,EAAUP,EAAqBM,KACtD,IAAKC,EACJ,MAAM,IAAIjB,MAAM,uDAEjB,MAAMyC,EAbiB,EACvBxB,EACAP,IAEOA,EAASgC,MAAMD,GACdA,EAAQxB,MAAQA,IAQR0B,CAAgB1B,EAAKP,GACrC,IAAK+B,EACJ,MAAM,IAAIzC,MACT,sCAAsCiB,4BAGxCD,EAAKM,UAAYmB,EAAQpB,OAAO,EAiBhCuB,CACChD,EAAUyC,kBACVzC,EAAUc,SACV8B,EAED,EAnBA","sources":["src/index.ts"],"sourcesContent":["// Part 1, parse <tw-storydata> node\n// Part 2, use that data to display stuff in the #passage node\n// Part 3, other fun stuff!\n\nconst buildStoryData = (): StoryData => {\n\t// Get Story data from root node\n\tconst rootStoryDataNode = document.querySelector(\"tw-storydata\");\n\n\tif (!rootStoryDataNode) {\n\t\tthrow new Error(\"Story Data is missing! Oops!\");\n\t}\n\n\tconst name = rootStoryDataNode.getAttribute(\"name\");\n\tconst ifid = rootStoryDataNode.getAttribute(\"ifid\");\n\tconst startnode = rootStoryDataNode.getAttribute(\"startnode\");\n\n\tif (!name) {\n\t\tthrow new Error(\"Story is missing a name!\");\n\t}\n\n\tif (!ifid) {\n\t\tthrow new Error(`Story is missing an ifid!`);\n\t}\n\n\tif (!startnode) {\n\t\tthrow new Error(`No startnode specified!`);\n\t}\n\n\tconst format = rootStoryDataNode.getAttribute(\"format\");\n\tconst formatVersion = rootStoryDataNode.getAttribute(\"format-version\");\n\tconst zoom = rootStoryDataNode.getAttribute(\"zoom\");\n\tconst creator = rootStoryDataNode.getAttribute(\"creator\");\n\tconst creatorVersion = rootStoryDataNode.getAttribute(\"creator-version\");\n\n\t// Get Passages Data\n\tconst passages: Passage[] = [];\n\tconst passageNodes = document.querySelectorAll(\"tw-passagedata\");\n\n\tArray.from(passageNodes).forEach((node) => {\n\t\tconst pid = node.getAttribute(\"pid\");\n\t\tconst name = node.getAttribute(\"name\");\n\n\t\tif (!pid) {\n\t\t\tthrow new Error(`A passage (name: ${name}) is missing a pid!`);\n\t\t}\n\t\tif (!name) {\n\t\t\tthrow new Error(`A passage with pid ${pid} is missing a name!`);\n\t\t}\n\n\t\tconst tagsRaw = node.getAttribute(\"name\");\n\t\tconst positionRaw = node.getAttribute(\"name\");\n\t\tconst sizeRaw = node.getAttribute(\"name\");\n\t\tconst content = node.innerHTML;\n\n\t\tconst tags = tagsRaw?.split(\" \");\n\t\tconst position = { x: 0, y: 0 };\n\t\tif (positionRaw) {\n\t\t\tconst positionCoords = positionRaw\n\t\t\t\t.split(\",\")\n\t\t\t\t.map((n) => parseFloat(n));\n\t\t\tposition.x = positionCoords[0];\n\t\t\tposition.y = positionCoords[1];\n\t\t}\n\t\tconst size = { width: 100, height: 100 };\n\t\tif (sizeRaw) {\n\t\t\tconst dims = sizeRaw.split(\",\").map((n) => parseFloat(n));\n\t\t\tsize.width = dims[0];\n\t\t\tsize.height = dims[1];\n\t\t}\n\n\t\tpassages.push({\n\t\t\tpid,\n\t\t\tname,\n\t\t\ttags,\n\t\t\tposition,\n\t\t\tsize,\n\t\t\tcontent,\n\t\t});\n\t});\n\n\treturn {\n\t\tname,\n\t\tifid,\n\t\tformat,\n\t\tformatVersion,\n\t\tstartnode,\n\t\tzoom,\n\t\tcreator,\n\t\tcreatorVersion,\n\t\tpassages,\n\t\tcurrentPassagePid: startnode,\n\t};\n};\n\nconst getPassageByPid = (\n\tpid: Pid,\n\tpassages: Passage[]\n): Passage | undefined => {\n\treturn passages.find((passage) => {\n\t\treturn passage.pid === pid;\n\t});\n};\n\nconst displayPassage = (pid: Pid, passages: Passage[], node: Element) => {\n\tif (!pid) {\n\t\tthrow new Error(`Tried to display a passage without supplying a pid!`);\n\t}\n\tconst passage = getPassageByPid(pid, passages);\n\tif (!passage) {\n\t\tthrow new Error(\n\t\t\t`Tried to display passage with pid: ${pid}, but it doesn't exist!`\n\t\t);\n\t}\n\tnode.innerHTML = passage.content;\n};\n\n(() => {\n\tconst storyData = buildStoryData();\n\tconst storyContainer = document.querySelector(\"#tw-story\");\n\tif (!storyContainer) {\n\t\tthrow new Error(`Missing story container #tw-story!`);\n\t}\n\n\tconst passageContainer = storyContainer.querySelector(\n\t\t\"#tw-story #tw-passage\"\n\t);\n\tif (!passageContainer) {\n\t\tthrow new Error(`Missing passage container #tw-passage`);\n\t}\n\n\tdisplayPassage(\n\t\tstoryData.currentPassagePid,\n\t\tstoryData.passages,\n\t\tpassageContainer\n\t);\n})();\n"],"names":["storyData","rootStoryDataNode","document","querySelector","Error","name","getAttribute","ifid","startnode","format","formatVersion","zoom","creator","creatorVersion","passages","passageNodes","querySelectorAll","Array","from","forEach","node","pid","tagsRaw","positionRaw","sizeRaw","content","innerHTML","tags","split","position","x","y","positionCoords","map","n","parseFloat","size","width","height","dims","push","currentPassagePid","$c2848ebcf924d7cd$var$buildStoryData","storyContainer","passageContainer","passage","find","$c2848ebcf924d7cd$var$getPassageByPid","$c2848ebcf924d7cd$var$displayPassage"],"version":3,"file":"index.js.map"}