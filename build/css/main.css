:root{--background:#222;--text:#ddd;--textDark:#111;--accent1:gold;--accent1bright:#ffa900;--accent1dim:#c8a937;--disabled:#ccc}body,html{margin:0;padding:0}body{background-color:var(--background);color:var(--text);text-shadow:0 0 1px;font-family:monospace}a{color:var(--accent1bright);font-weight:700}a:visited{color:var(--accent1dim)}a:hover{color:var(--accent1bright)}#interface{max-width:1080px;grid-template-columns:repeat(12,1fr);justify-content:center;gap:4em;margin:0 auto;padding:4em;display:grid}@media screen and (max-width:950px){#interface{grid-template-columns:1fr;gap:1em}}.window{border:solid 1px var(--accent1);box-shadow:0 0 3px var(--accent1),0 0 3px inset var(--accent1);padding-top:0}.window#tw-story{grid-column:1/span 8}.window#tw-input{grid-column:9/span 4}@media screen and (max-width:950px){.window#tw-story,.window#tw-input{grid-column:1/span 1}}.window .titlebar{background-color:var(--accent1);color:var(--textDark);box-shadow:0 1px 3px var(--accent1);justify-content:space-between;padding:.3em .5em;display:flex}.window .titlebar:after{content:"x";height:100%}.window .content{min-height:300px;padding:1em}.window .content hr{width:50%;border-color:var(--accent1);box-shadow:0 0 2px var(--accent1);transform:scaleX(1.25)}.window .content#tw-passage{animation-duration:.75s;animation-fill-mode:both}.window .content#tw-passage.run-anim{animation-name:appear}.window .buttons{flex-wrap:wrap;grid-template-columns:repeat(3,1fr);justify-content:center;gap:1em;margin:1.5em auto;display:flex}.window .directionals{max-width:150px;grid-template-columns:repeat(3,1fr);justify-content:center;margin:1.5em auto;display:grid}.window .map{justify-content:center;margin:1.5em auto;display:flex}.window button{background-color:var(--background);color:var(--accent1);border:solid 1px var(--accent1);box-shadow:0 0 2px var(--accent1),0 0 2px inset var(--accent1);text-shadow:0 0 1px;border-radius:.75em;padding:.5em 1.5em;font-family:monospace}.window button:hover:not(:disabled){background-color:var(--accent1);color:var(--textDark);cursor:pointer}.window button:disabled{border-color:var(--disabled);color:var(--disabled);opacity:.5;cursor:not-allowed}.window button[data-passage-name=empty]{opacity:0;pointer-events:none}.window button.north{grid-column-start:2}.window button.west{grid-row-start:2;grid-column-start:1}.window button.east{grid-row-start:2;grid-column-start:3}.window button.south{grid-row-start:3;grid-column-start:2}@keyframes appear{0%{opacity:0}to{opacity:1}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
