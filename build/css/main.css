:root{--background:#111;--backgroundGradientDest:#2d0226;--text:#ddd;--textDark:#111;--accent1:#ddd;--accent1bright:#fff;--accent1dim:#888;--disabled:#888;--accent1fade:#fff6;--textShadowDepth:1px}body,html{width:100%;height:100%;margin:0;padding:0}body{background-image:linear-gradient(to bottom,var(--background)80%,var(--backgroundGradientDest)100%);color:var(--text);font-family:monospace;font-size:16px}a{color:var(--accent1bright);font-weight:700}a:visited{color:var(--accent1dim)}a:hover{color:var(--accent1bright)}#interface{border:solid 1px var(--accent1);width:100%;border-left:none;border-right:none;grid-template-columns:repeat(12,1fr);justify-content:center;gap:0;margin:0;padding:0 1em;display:grid;position:absolute;top:50%;transform:translateY(-50%)}#interface:before,#interface:after{--dist:13px;content:" ";width:100%;height:3px;background-color:var(--accent1);left:0;top:calc(var(--dist)*-1);transform-origin:0;animation:expandX .75s ease-in-out 1s both;display:block;position:absolute}#interface:after{top:calc(100% + var(--dist));transform-origin:100%;animation-delay:1.3s}.window{border:solid 1px var(--accent1);border-top:none;border-bottom:none;padding-top:0}.window#tw-story{grid-column:2/span 7}.window#tw-input{border-left:none;grid-column:9/span 2}.window .titlebar{background-color:var(--accent1);color:var(--textDark);justify-content:space-between;padding:.3em .5em;display:none}.window .titlebar:after{content:"x";height:100%}.window .content{padding:1em}.window .content hr{width:50%;border-color:var(--accent1);border-bottom:none;border-left:none;border-right:none;transform:scaleX(1.25)}.window .content hr:after{content:" ";width:66%;height:1px;background-color:var(--accent1dim);transform-origin:100%;margin:3px 0 0 auto;animation:expandX .5s ease-in-out .75s both;display:block}.window .content#tw-passage{animation-duration:.75s;animation-fill-mode:both}.window .content#tw-passage.run-anim{animation-name:appear}.window .buttons{flex-wrap:wrap;grid-template-columns:repeat(3,1fr);justify-content:center;gap:1em;margin:1.5em auto;display:flex}.window .directionals{max-width:150px;grid-template-columns:repeat(3,1fr);justify-content:center;margin:1.5em auto;display:grid}.window .map{justify-content:center;margin:1.5em auto;display:flex}.window button{background-color:var(--background);color:var(--accent1);border:solid 1px var(--accent1);width:100%;border-right-color:var(--accent1dim);border-bottom-color:var(--accent1dim);border-radius:0;padding:.5em 1.5em;font-family:monospace;font-size:1rem;display:block;position:relative}.window button:not(.directionals button):before{content:" ";width:calc(100% + 10px);height:calc(100% + 10px);border:solid 1px var(--accent1);border-left-color:var(--accent1dim);border-top-color:var(--accent1dim);transform-origin:50%;animation:expandX .5s ease-in-out .1s both;display:block;position:absolute;top:-5px;left:-5px}.window button:hover:not(:disabled){background-color:var(--accent1);color:var(--textDark);cursor:pointer}.window button:disabled{border-color:var(--disabled);color:var(--disabled);opacity:.5;cursor:not-allowed}.window button[data-passage-name=empty]{opacity:0;pointer-events:none}.window button.north{grid-column-start:2}.window button.west{grid-row-start:2;grid-column-start:1}.window button.east{grid-row-start:2;grid-column-start:3}.window button.south{grid-row-start:3;grid-column-start:2}@keyframes appear{0%{opacity:0}to{opacity:1}}@keyframes expandX{0%{transform:scaleX(0)}to{transform:scaleX(1)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
